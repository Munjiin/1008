css3 restaurant menu > 다운
프로젝트 명:1008

<ajaxEx01.html>


<!DOCTYPE html>
<html>
<body>

<div id="demo">
    <h2>Let AJAX change this text</h2>
    <button type="button" onclick="loadDoc()">Change Content</button>
</div>

<script>
    function loadDoc() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (this.readyState == 4 && this.status == 200) {
                // document.getElementById("demo").innerHTML = this.responseText;

                /* xml용
                var xmlDoc = this.responseXML;
                console.log(xmlDoc.querySelector("#b1"));
                */

                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);


            }
        };
        xhttp.open("GET", "subway.json", true);
        xhttp.send();
    }
</script>

</body>
</html>

---------------------------------------------------------이클립스
<quiz.html>
package org.zerock.web;

import java.util.Arrays;

public class Quiz {
	
	private String text ;
	private String[] options;
	private String answer;
	
	
	
	public Quiz(String text, String[] options, String answer) {
		super();
		this.text = text;
		this.options = options;
		this.answer = answer;
	}
	
	
	@Override
	public String toString() {
		return "Quiz [text=" + text + ", options=" + Arrays.toString(options) + ", answer=" + answer + "]";
	}
	public String getText() {
		return text;
	}
	public void setText(String text) {
		this.text = text;
	}
	public String[] getOptions() {
		return options;
	}
	public void setOptions(String[] options) {
		this.options = options;
	}
	public String getAnswer() {
		return answer;
	}
	public void setAnswer(String answer) {
		this.answer = answer;
	}
	
	
	

}

--------------------------------------------------------------<quizservlet.html>
package org.zerock.web;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.Gson;

/**
 * Servlet implementation class QuizServlet
 */
@WebServlet("/quiz")
public class QuizServlet extends HttpServlet {
	
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public QuizServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#service(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("application/json");
		
		Quiz quiz = new Quiz("test quiz111", new String[] {"1.A","2.B","3.C"}, "ANSWLDLS");
		
		Gson gson = new Gson();
		String json = gson.toJson(quiz);
		
		response.getWriter().print(json);
	}

}

-----------------------------------------------------------------<quiz.html>
<!DOCTYPE html>
<html>
<meta charset="UTF-8">
<body>



<div id="demo">
    <h2>Let AJAX change this text</h2>
    <button type="button" onclick="loadDoc1()">지인</button>
    <button type="button" onclick="loadDoc2()">고은</button>
    <button type="button" onclick="loadDoc3()">가익</button>
    <button type="button" onclick="loadDoc4()">연훈</button>
    <button type="button" onclick="loadDoc5()">가영</button>
</div>

<script>
    function loadDoc1() {
    	response.setCharacterEncoding("UTF-8");
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (xhttp.readyState == 4 && xhttp.status == 200) {
            	
                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);

            }
        };
        xhttp.open("GET", "http://localhost:8080/jsonEx/quiz", true);
        xhttp.send();
    }
    
    function loadDoc2() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (xhttp.readyState == 4 && xhttp.status == 200) {
            	
                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);

            }
        };
        xhttp.open("GET", "http://10.10.10.86:8080/jsonEx/quiz", true);
        xhttp.send();
    }
    function loadDoc3() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (xhttp.readyState == 4 && xhttp.status == 200) {
            	
                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);

            }
        };
        xhttp.open("GET", "http://10.10.10.95:8080/jsonEx/quiz", true);
        xhttp.send();
    }
    function loadDoc4() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (xhttp.readyState == 4 && xhttp.status == 200) {
            	
                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);

            }
        };
        xhttp.open("GET", "http://10.10.10.96:8080/jsonEx/quiz", true);
        xhttp.send();
    }
    function loadDoc5() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {

            console.log(xhttp.readyState)
            if (xhttp.readyState == 4 && xhttp.status == 200) {
            	
                var text = JSON.parse(this.responseText); //json.parse하면 객체로 바뀜.
                console.log(text);

            }
        };
        xhttp.open("GET", "http://10.10.10.97:8080/jsonEx/quiz", true);
        xhttp.send();
    }
    
    
    
    }


    
    
    
    
    
    
    }
    
</script>

</body>
</html>



-----------------------------------------------------------
ajax는 보안상 다른 곳에서 띄우기가 불가
그러나
<ajaxfilter.java>
package org.zerock.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet Filter implementation class AjaxFilter
 */
@WebFilter("/quiz")
public class AjaxFilter implements Filter {

    /**
     * Default constructor. 
     */
    public AjaxFilter() {
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {
		// TODO Auto-generated method stub
	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		
		/*다른 곳에서도 사용할 수 있는 코드*/
		 ((HttpServletResponse) response)
		 .addHeader("Access-Control-Allow-Origin", "*");
	     ((HttpServletResponse) response)
	     .addHeader("Access-Control-Allow-Methods","GET, OPTIONS, HEAD, PUT, POST");
		
		
		chain.doFilter(request, response);
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {
		// TODO Auto-generated method stub
	}

}

이 코드면 가능

